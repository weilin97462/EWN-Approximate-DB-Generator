#include "basic_tables.hpp"
const int C[26][26] = {
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 4, 6, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 5, 10, 10, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 6, 15, 20, 15, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 7, 21, 35, 35, 21, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 8, 28, 56, 70, 56, 28, 8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 9, 36, 84, 126, 126, 84, 36, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 10, 45, 120, 210, 252, 210, 120, 45, 10, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 11, 55, 165, 330, 462, 462, 330, 165, 55, 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 12, 66, 220, 495, 792, 924, 792, 495, 220, 66, 12, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 13, 78, 286, 715, 1287, 1716, 1716, 1287, 715, 286, 78, 13, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 14, 91, 364, 1001, 2002, 3003, 3432, 3003, 2002, 1001, 364, 91, 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 15, 105, 455, 1365, 3003, 5005, 6435, 6435, 5005, 3003, 1365, 455, 105, 15, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 16, 120, 560, 1820, 4368, 8008, 11440, 12870, 11440, 8008, 4368, 1820, 560, 120, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 17, 136, 680, 2380, 6188, 12376, 19448, 24310, 24310, 19448, 12376, 6188, 2380, 680, 136, 17, 1, 0, 0, 0, 0, 0, 0, 0, 0},
    {1, 18, 153, 816, 3060, 8568, 18564, 31824, 43758, 48620, 43758, 31824, 18564, 8568, 3060, 816, 153, 18, 1, 0, 0, 0, 0, 0, 0, 0},
    {1, 19, 171, 969, 3876, 11628, 27132, 50388, 75582, 92378, 92378, 75582, 50388, 27132, 11628, 3876, 969, 171, 19, 1, 0, 0, 0, 0, 0, 0},
    {1, 20, 190, 1140, 4845, 15504, 38760, 77520, 125970, 167960, 184756, 167960, 125970, 77520, 38760, 15504, 4845, 1140, 190, 20, 1, 0, 0, 0, 0, 0},
    {1, 21, 210, 1330, 5985, 20349, 54264, 116280, 203490, 293930, 352716, 352716, 293930, 203490, 116280, 54264, 20349, 5985, 1330, 210, 21, 1, 0, 0, 0, 0},
    {1, 22, 231, 1540, 7315, 26334, 74613, 170544, 319770, 497420, 646646, 705432, 646646, 497420, 319770, 170544, 74613, 26334, 7315, 1540, 231, 22, 1, 0, 0, 0},
    {1, 23, 253, 1771, 8855, 33649, 100947, 245157, 490314, 817190, 1144066, 1352078, 1352078, 1144066, 817190, 490314, 245157, 100947, 33649, 8855, 1771, 253, 23, 1, 0, 0},
    {1, 24, 276, 2024, 10626, 42504, 134596, 346104, 735471, 1307504, 1961256, 2496144, 2704156, 2496144, 1961256, 1307504, 735471, 346104, 134596, 42504, 10626, 2024, 276, 24, 1, 0},
    {1, 25, 300, 2300, 12650, 53130, 177100, 480700, 1081575, 2042975, 3268760, 4457400, 5200300, 5200300, 4457400, 3268760, 2042975, 1081575, 480700, 177100, 53130, 12650, 2300, 300, 25, 1},
};
const int factorial[7] =
    {1, 1, 2, 6, 24, 120, 720};
//flip board
const char flip[25]=
{
    0,5,10,15,20, 
    1,6,11,16,21, 
    2,7,12,17,22, 
    3,8,13,18,23, 
    4,9,14,19,24, 
};

// piece set 0 is never used
const char to_equivalent_piece_set[64] =
    {0, 33, 33, 27, 33, 29, 28, 15, 33, 31, 30, 21, 24, 18, 20, 11, 33, 32, 25, 22, 30, 16, 19, 13, 28, 17, 19, 6, 20, 7, 8, 2, 33, 26, 32, 14, 31, 23, 17, 9, 29, 23, 16, 12, 18, 5, 7, 3, 27, 14, 22, 10, 21, 12, 6, 4, 15, 9, 13, 4, 11, 3, 2, 1};
const std::bitset<6> from_equivalent_piece_set[34] =
    {0b000000, 0b111111, 0b011111, 0b101111, 0b110111, 0b101101, 0b011011, 0b011101, 0b011110, 0b100111, 0b110011, 0b001111, 0b101011, 0b010111, 0b100011, 0b000111, 0b010101, 0b011001, 0b001101, 0b010110, 0b001110, 0b001011, 0b010011, 0b100101, 0b001100, 0b010010, 0b100001, 0b000011, 0b000110, 0b000101, 0b001010, 0b001001, 0b010001, 0b000001};
const bool is_equivalent_piece_set_symmetric[34] =
    {0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0};
const char sort_piece_bits[64][6] = {
    {-1, -1, -1, -1, -1, -1},
    {0, -1, -1, -1, -1, -1},
    {-1, 0, -1, -1, -1, -1},
    {0, 1, -1, -1, -1, -1},
    {-1, -1, 0, -1, -1, -1},
    {0, -1, 1, -1, -1, -1},
    {-1, 0, 1, -1, -1, -1},
    {0, 1, 2, -1, -1, -1},
    {-1, -1, -1, 0, -1, -1},
    {0, -1, -1, 1, -1, -1},
    {-1, 0, -1, 1, -1, -1},
    {0, 1, -1, 2, -1, -1},
    {-1, -1, 0, 1, -1, -1},
    {0, -1, 1, 2, -1, -1},
    {-1, 0, 1, 2, -1, -1},
    {0, 1, 2, 3, -1, -1},
    {-1, -1, -1, -1, 0, -1},
    {0, -1, -1, -1, 1, -1},
    {-1, 0, -1, -1, 1, -1},
    {0, 1, -1, -1, 2, -1},
    {-1, -1, 1, -1, 0, -1},
    {0, -1, 1, -1, 2, -1},
    {-1, 0, 1, -1, 2, -1},
    {0, 1, 2, -1, 3, -1},
    {-1, -1, -1, 1, 0, -1},
    {0, -1, -1, 1, 2, -1},
    {-1, 2, -1, 1, 0, -1},
    {0, 1, -1, 2, 3, -1},
    {-1, -1, 2, 1, 0, -1},
    {0, -1, 1, 2, 3, -1},
    {-1, 0, 1, 2, 3, -1},
    {0, 1, 2, 3, 4, -1},
    {-1, -1, -1, -1, -1, 0},
    {0, -1, -1, -1, -1, 1},
    {-1, 1, -1, -1, -1, 0},
    {0, 1, -1, -1, -1, 2},
    {-1, -1, 1, -1, -1, 0},
    {0, -1, 1, -1, -1, 2},
    {-1, 2, 1, -1, -1, 0},
    {0, 1, 2, -1, -1, 3},
    {-1, -1, -1, 1, -1, 0},
    {2, -1, -1, 1, -1, 0},
    {-1, 2, -1, 1, -1, 0},
    {0, 1, -1, 2, -1, 3},
    {-1, -1, 2, 1, -1, 0},
    {0, -1, 1, 2, -1, 3},
    {-1, 3, 2, 1, -1, 0},
    {0, 1, 2, 3, -1, 4},
    {-1, -1, -1, -1, 1, 0},
    {2, -1, -1, -1, 1, 0},
    {-1, 2, -1, -1, 1, 0},
    {0, 1, -1, -1, 2, 3},
    {-1, -1, 2, -1, 1, 0},
    {3, -1, 2, -1, 1, 0},
    {-1, 3, 2, -1, 1, 0},
    {0, 1, 2, -1, 3, 4},
    {-1, -1, -1, 2, 1, 0},
    {3, -1, -1, 2, 1, 0},
    {-1, 3, -1, 2, 1, 0},
    {4, 3, -1, 2, 1, 0},
    {-1, -1, 3, 2, 1, 0},
    {4, -1, 3, 2, 1, 0},
    {-1, 4, 3, 2, 1, 0},
    {0, 1, 2, 3, 4, 5},
};
const char piece_set_to_nums[34][6] = {
    {},
    {0, 1, 2, 3, 4, 5},
    {0, 1, 2, 3, 4},
    {0, 1, 2, 3, 5},
    {0, 1, 2, 4, 5},
    {0, 2, 3, 5},
    {0, 1, 3, 4},
    {0, 2, 3, 4},
    {1, 2, 3, 4},
    {0, 1, 2, 5},
    {0, 1, 4, 5},
    {0, 1, 2, 3},
    {0, 1, 3, 5},
    {0, 1, 2, 4},
    {0, 1, 5},
    {0, 1, 2},
    {0, 2, 4},
    {0, 3, 4},
    {0, 2, 3},
    {1, 2, 4},
    {1, 2, 3},
    {0, 1, 3},
    {0, 1, 4},
    {0, 2, 5},
    {2, 3},
    {1, 4},
    {0, 5},
    {0, 1},
    {1, 2},
    {0, 2},
    {1, 3},
    {0, 3},
    {0, 4},
    {0},
};

// manhattan distance range according to piece number
const short md_range[7][2] =
{
    {0, 0},
    {1, 8},
    {2, 15},
    {4, 22},
    {6, 28},
    {8, 34},
    {11, 40},
};